{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/dominate.js"],"names":["f","exports","module","define","amd","window","global","self","this","ryanmorrdominate","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","dominate","html","_ref","arguments","undefined","_ref$context","context","document","_ref$type","type","_ref$scripts","scripts","isTaggedTemplate","_arguments","Array","prototype","slice","strings","values","raw","reduce","acc","str","join","toLowerCase","parseDocument","match","tagNameRe","exec","createTextNode","tag","el","parse","trim","from","querySelectorAll","forEach","script","parent","parentNode","removeChild","replaceChild","copyScript","supportsTemplate","createElement","supportsDOMParserHTML","DOMParser","parseFromString","wrapMap","thead","col","tr","td","_default","tbody","tfoot","colgroup","caption","th","svgTags","args","_typeof","isArray","copyAttributes","target","attr","attrs","attributes","len","setAttribute","name","value","doc","async","text","textContent","markup","newDoc","documentElement","parseHTML","innerHTML","parseElements","indexOf","template","importNode","content","wrap","depth","lastChild","_el2","firstChild","childNodes","frag","createDocumentFragment","appendChild"],"mappings":"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","file":"dominate.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\r\n * Regular expression to extract the tag name\r\n */\r\nconst tagNameRe = /<([\\w-]+)/;\r\n\r\n/**\r\n * Check if the browser supports the <template> element\r\n */\r\nconst supportsTemplate = 'content' in document.createElement('template');\r\n\r\n/**\r\n * Determine if `DOMParser` supports 'text/html'\r\n */\r\nconst supportsDOMParserHTML = (() => {\r\n    try {\r\n        if ((new DOMParser()).parseFromString('', 'text/html')) {\r\n            return true;\r\n        }\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n})();\r\n\r\n/**\r\n * Prevent the parser from ignoring certain\r\n * elements by wrapping them with the necessary\r\n * parent elements to appease XHTML compliance\r\n * courtesy of jQuery: https://github.com/jquery/jquery/blob/master/src/manipulation/wrapMap.js\r\n */\r\nconst wrapMap = {\r\n    thead: [1, '<table>', '</table>'],\r\n    col: [2, '<table><colgroup>', '</colgroup></table>'],\r\n    tr: [2, '<table><tbody>', '</tbody></table>'],\r\n    td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\r\n    _default: [0, '', '']\r\n};\r\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\r\nwrapMap.th = wrapMap.td;\r\n\r\n/**\r\n * SVG elements\r\n */\r\nconst svgTags = [\r\n    'animate',\r\n    'animateColor',\r\n    'animateMotion',\r\n    'animateTransform',\r\n    'circle',\r\n    'clipPath',\r\n    'defs',\r\n    'desc',\r\n    'ellipse',\r\n    'foreignObject',\r\n    'filter',\r\n    'g',\r\n    'gradient',\r\n    'image',\r\n    'line',\r\n    'linearGradient',\r\n    'marker',\r\n    'mask',\r\n    'metadata',\r\n    'path',\r\n    'pattern',\r\n    'polygon',\r\n    'polyline',\r\n    'radialGradient',\r\n    'rect',\r\n    'set',\r\n    'stop',\r\n    'switch',\r\n    'symbol',\r\n    'text',\r\n    'textPath',\r\n    'tref',\r\n    'tspan',\r\n    'use',\r\n    'view'\r\n];\r\n\r\n/**\r\n * Add wrap to support SVG elements\r\n */\r\nconst svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\r\nsvgTags.reduce((wrap, tag) => (wrapMap[tag] = wrap), svgWrap);\r\n\r\n/**\r\n * Is the tag an SVG tag\r\n *\r\n * @param {String} tag\r\n * @return {Boolean}\r\n * @api private\r\n */\r\nfunction isSVG(tag) {\r\n    return svgTags.indexOf(tag) !== -1;\r\n}\r\n\r\n/**\r\n * Are the passed arguments a result of a\r\n * tagged template literal invocation\r\n *\r\n * @param {Arguments} args\r\n * @return {Boolean}\r\n * @api private\r\n */\r\nfunction isTaggedTemplate(args) {\r\n    if (!args || typeof args !== 'object') {\r\n        return false;\r\n    }\r\n    const strings = args[0];\r\n    return (\r\n        strings &&\r\n        Array.isArray(strings) &&\r\n        Array.isArray(strings.raw) &&\r\n        typeof strings[0] === 'string' &&\r\n        typeof strings.raw[0] === 'string'\r\n    ) || false;\r\n}\r\n\r\n/**\r\n * Copy the attributes from one node to another\r\n *\r\n * @param {Element} el\r\n * @param {Element} target\r\n * @return {Element}\r\n * @api private\r\n */\r\nfunction copyAttributes(el, target) {\r\n    const attrs = target.attributes;\r\n    for (let i = 0, len = attrs.length, attr; i < len; i++) {\r\n        attr = attrs[i];\r\n        el.setAttribute(attr.name, attr.value);\r\n    }\r\n    return el;\r\n}\r\n\r\n/**\r\n * Create a script element that will execute\r\n *\r\n * @param {Document} doc\r\n * @param {Element} el\r\n * @return {Element}\r\n * @api private\r\n */\r\nfunction copyScript(doc, el) {\r\n    const script = doc.createElement('script');\r\n    script.async = true;\r\n    script.text = el.textContent;\r\n    return copyAttributes(script, el);\r\n}\r\n\r\n/**\r\n * Parse HTML and XML documents\r\n *\r\n * @param {String} markup\r\n * @param {String} type\r\n * @return {Element}\r\n * @api private\r\n */\r\nfunction parseDocument(markup, type) {\r\n    const parser = new DOMParser();\r\n    const newDoc = parser.parseFromString(markup, type);\r\n    return newDoc.removeChild(newDoc.documentElement);\r\n}\r\n\r\n/**\r\n * Parse HTML string using the proper parent\r\n * element\r\n *\r\n * @param {Document} doc\r\n * @param {String} html\r\n * @param {String} tag\r\n * @return {Element}\r\n * @api private\r\n */\r\nfunction parseHTML(doc, html, tag = 'div') {\r\n    const el = doc.createElement(tag);\r\n    el.innerHTML = html;\r\n    return el;\r\n}\r\n\r\n/**\r\n * Parse HTML elements\r\n *\r\n * @param {Document} doc\r\n * @param {String} tag\r\n * @param {String} html\r\n * @return {Element}\r\n * @api private\r\n */\r\nfunction parseElements(doc, tag, html) {\r\n    if (supportsTemplate && !isSVG(tag)) {\r\n        const template = doc.createElement('template');\r\n        template.innerHTML = html;\r\n        return doc.importNode(template.content, true);\r\n    }\r\n    const wrap = wrapMap[tag] || wrapMap._default;\r\n    let el = parseHTML(doc, wrap[1] + html + wrap[2]);\r\n    let depth = wrap[0];\r\n    while (depth--) {\r\n        el = el.lastChild;\r\n    }\r\n    return el;\r\n}\r\n\r\n/**\r\n * Parse an HMTL string into a DOM node\r\n *\r\n * @param {Document} doc\r\n * @param {String} tag\r\n * @param {String} html\r\n * @return {Element|DocumentFragment}\r\n * @api private\r\n */\r\nfunction parse(doc, tag, html) {\r\n    if (tag === 'html') {\r\n        if (supportsDOMParserHTML) {\r\n            return parseDocument(html, 'text/html');\r\n        }\r\n        const el = parseHTML(doc, html, 'html');\r\n        const xml = parseDocument(html, 'text/xml');\r\n        return copyAttributes(el, xml);\r\n    }\r\n    if (tag === 'head' || tag === 'body') {\r\n        const el = parseHTML(doc, html, 'html');\r\n        return el.removeChild(tag === 'head' ? el.firstChild : el.lastChild);\r\n    }\r\n    const el = parseElements(doc, tag, html);\r\n    if (tag === 'script') {\r\n        return copyScript(doc, el.firstChild);\r\n    }\r\n    if (el.childNodes.length === 1) {\r\n        return el.removeChild(el.firstChild);\r\n    }\r\n    const frag = doc.createDocumentFragment();\r\n    while (el.firstChild) {\r\n        frag.appendChild(el.firstChild);\r\n    }\r\n    return frag;\r\n}\r\n\r\n/**\r\n * Convert a string into a DOM node\r\n *\r\n * @param {String} html\r\n * @param {Object} options\r\n * @param {Document} options.context\r\n * @param {String} options.type\r\n * @param {Boolean} options.scripts\r\n * @return {Element|TextNode|DocumentFragment}\r\n * @api public\r\n */\r\nexport default function dominate(html, {context = document, type = 'html', scripts = true} = {}) {\r\n    if (isTaggedTemplate(arguments)) {\r\n        const [strings, ...values] = arguments;\r\n        return dominate(strings.raw.reduce((acc, str, i) => acc + (values[i - 1]).join('') + str));\r\n    }\r\n    if (type.toLowerCase() === 'xml') {\r\n        return parseDocument(html, 'text/xml');\r\n    }\r\n    const match = tagNameRe.exec(html);\r\n    if (!match) {\r\n        return context.createTextNode(html);\r\n    }\r\n    const tag = match[1];\r\n    const el = parse(context, tag, html.trim());\r\n    if (tag === 'script') {\r\n        return el;\r\n    }\r\n    Array.from(el.querySelectorAll('script')).forEach((script) => {\r\n        const parent = script.parentNode;\r\n        if (scripts === false) {\r\n            parent.removeChild(script);\r\n        } else {\r\n            parent.replaceChild(copyScript(context, script), script);\r\n        }\r\n    });\r\n    return el;\r\n}\r\n"]}